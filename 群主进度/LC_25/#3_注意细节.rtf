{\rtf1\ansi\ansicpg936\cocoartf2569
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 //2020.09.14_#3_
\f1 \'d7\'a2\'d2\'e2\'cf\'b8\'bd\'da
\f0 \
\
/**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* reverseKGroup(ListNode* head, int k) \{\
        ListNode * node = head;\
        int count = 0;\
        \
        while (node != NULL && count != k) \{\
            node = node->next;\
            count++;\
        \}\
        \
        if (count == k) \{\
            node = reverseKGroup(node, k);\
            \
            while (count-- > 0) \{\
                ListNode * temp = head->next;\
                head->next = node;\
                node = head;\
                head = temp;\
                //node
\f1 \'d2\'bb\'d6\'b1\'ca\'c7
\f0 head
\f1 \'b5\'c4
\f0 (
\f1 \'d4\'ad\'cb\'b3\'d0\'f2\'b5\'c4
\f0 )
\f1 \'c7\'b0\'d2\'bb\'b8\'f6
\f0 \
            \}\
            \
            return node;\
        \}\
        \
        return head;\
    \}\
\};}
{\rtf1\ansi\ansicpg936\cocoartf2569
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 //2020.09.13_#0\
\
class Solution \{\
public:\
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) \{\
        int i = m-1, j = n - 1, k = m + n - 1;\
        \
        //three points for nums1, nums2, and whole(which is the true nums1)\
        while (i >= 0 && j >= 0) \{\
            if (nums1[i] > nums2[j]) \{\
                nums1[k--] = nums1[i--];\
            \}\
            else \{\
                nums1[k--] = nums2[j--];\
            \}\
        \}\
        \
        while (j >= 0) \{\
                nums1[k--] = nums2[j--]; \
            \}\
        \
    \}\
\};\
\
//BestVote\
/*\
\
class Solution \{\
public:\
    void merge(int A[], int m, int B[], int n) \{\
        int i=m-1;\
		int j=n-1;\
		int k = m+n-1;\
		while(i >=0 && j>=0)\
		\{\
			if(A[i] > B[j])\
				A[k--] = A[i--];\
			else\
				A[k--] = B[j--];\
		\}\
		while(j>=0)\
			A[k--] = B[j--];\
    \}\
\};\
\
*/}
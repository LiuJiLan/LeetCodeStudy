{\rtf1\ansi\ansicpg936\cocoartf2567
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 //2020.09.09\
\
/**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
\
\
class Solution \{\
public:\
    bool hasCycle(ListNode *head) \{\
        if (head == NULL || head->next ==NULL) \{\
            return false;\
        \}\
        \
        ListNode* slow = head, * fast = head;\
        while (fast->next != NULL && fast->next->next != NULL) \{\
            slow = slow ->next;\
            fast = fast->next->next;\
            \
            if(slow == fast) \{\
                return true;\
            \}\
        \}\
        \
        return false;\
    \}\
\};\
\
/*\
//
\f1 \'b1\'ea\'b4\'f0
\f0 \
class Solution \{\
public:\
    bool hasCycle(ListNode *head) \{\
        if(head == NULL || head -> next == NULL)    //
\f1 \'cf\'c8\'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ce\'aa\'bf\'d5\'bb\'f2\'d5\'df\'ca\'c7\'b7\'f1\'d6\'bb\'ba\'ac\'d3\'d0\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8
\f0 \
            return false;\
 \
        ListNode *fast = head;\
        ListNode *slow = head;\
        \
        //
\f1 \'c6\'e4\'ca\'b5\'d6\'bb\'d3\'c3\'bf\'bc\'c2\'c7\'bf\'ec\'d6\'b8\'d5\'eb
\f0 \
        while(fast -> next && fast -> next -> next)\{\
            fast = fast -> next -> next;\
            slow = slow -> next;\
            if(fast == slow)\
                return true;\
        \}\
 \
        return false;\
    \}\
\};\
*/}